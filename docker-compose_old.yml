services:
    # backend: # app
    #     build:
    #         context: .
    #         dockerfile: Dockerfile.backend
    #         target: dev # target stage to build, CHANGE to prod for production
    #     container_name: backend
    #     restart: unless-stopped
    #     # ports:
    #     #     - ${BACKEND_PORT}:${BACKEND_PORT}
    #     depends_on:
    #         - db
    #     volumes: # remove after testing
    #         - .:/app
    #     env_file: .env
    #     networks:
    #         - backend_network

    # db: # db
    #     image: "postgres:16.2-alpine3.19"
    #     container_name: db
    #     restart: unless-stopped
    #     ports:
    #         - ${DB_PORT}:${DB_PORT} #for testing
    #     volumes:
    #         - user-data:/var/lib/postgresql/data
    #     environment:
    #         - POSTGRES_USER=${POSTGRES_USER}
    #         - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #     env_file: .env
    #     networks:
    #         - backend_network

    # cache:
    #     image: redis:latest
    #     container_name: cache
    #     restart: unless-stopped
    #     expose:
    #         - ${REDIS_PORT}
    #     ports:
    #         - ${REDIS_PORT}:${REDIS_PORT}
    #     volumes:
    #         - cache-data:/data
    #     env_file: .env
    #     networks:
    #         - backend_network

    # keycloak:
    #   # image: bitnami/keycloak:latest
    #   image: quay.io/keycloak/keycloak
    #   command: start
    #   container_name: keycloak
    #   restart: unless-stopped
    #   # command: start
    #   depends_on:
    #       - keycloak-db
    #   # ports:
    #   #     - "${KEYCLOAK_PORT}:${KEYCLOAK_PORT}"
    #   environment:
    #       - KC_PROXY_ADDRESS_FORWARDING=${KC_PROXY_ADDRESS_FORWARDING}
    #       - KC_HOSTNAME_STRICT=${KC_HOSTNAME_STRICT}
    #       - KC_HOSTNAME=${KC_HOSTNAME}
    #       - KC_PROXY=${KC_PROXY}
    #       - KC_HTTP_ENABLED=${KC_HTTP_ENABLED}
    #       - KC_DB=${KC_DB}
    #       - KC_DB_USERNAME=${KC_DB_USERNAME}
    #       - KC_DB_PASSWORD=${KC_DB_PASSWORD}
    #       - KC_DB_URL_HOST=${KC_DB_URL_HOST}
    #       - KC_DB_URL_PORT=${KC_DB_URL_PORT}
    #       - KC_DB_URL_DATABASE=${KC_DB_URL_DATABASE}
    #       - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
    #       - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    #   env_file: .env
    #   networks:
    #     proxy:
    #     backend_network:
    #   labels:
    #     - "traefik.enable=${TRAEFIK_ENABLE}"
    #     - "traefik.http.routers.keycloak.entrypoints=${TRAEFIK_HTTP_ROUTER_KEYCLOAK_ENTRYPOINTS}"
    #     - "traefik.http.routers.keycloak.rule=${TRAEFIK_HTTP_ROUTER_KEYCLOAK_RULE}"
    #     - "traefik.http.middlewares.keycloak-https-redirect.redirectscheme.scheme=${TRAEFIK_HTTP_MIDDLEWARES_KEYCLOAK_HTTPS_REDIRECT_REDIRECTSCHEME_SCHEME}"
    #     - "traefik.http.routers.keycloak.middlewares=${TRAEFIK_HTTP_ROUTER_KEYCLOAK_MIDDLEWARES}"
    #     - "traefik.http.routers.keycloak-secure.entrypoints=${TRAEFIK_HTTP_ROUTER_KEYCLOAK_SECURE_ENTRYPOINTS}"
    #     - "traefik.http.routers.keycloak-secure.rule=${TRAEFIK_HTTP_ROUTER_KEYCLOAK_SECURE_RULE}"
    #     - "traefik.http.routers.keycloak-secure.tls=${TRAEFIK_HTTP_ROUTER_KEYCLOAK_SECURE_TLS}"
    #     - "traefik.http.routers.keycloak-secure.service=${TRAEFIK_HTTP_ROUTER_KEYCLOAK_SECURE_SERVICE}"
    #     - "traefik.http.services.keycloak.loadbalancer.server.port=${TRAEFIK_HTTP_SERVICES_KEYCLOAK_LOADBALANCER_SERVER_PORT}"
    #     - "traefik.docker.network=proxy"

    keycloak:
        image: quay.io/keycloak/keycloak:24.0.4
        command: start
        container_name: keycloak
        restart: unless-stopped
        environment:
            - KC_DB=${POSTGRES_DRIVER} #driver
            - KC_DB_URL_HOST=keycloak-db #host->name of the service
            - KC_DB_URL_DATABASE=${K_DB_NAME} #database name
            - KC_DB_USERNAME=${K_DB_USER}
            - KC_DB_PASSWORD=${K_DB_PW}
            - KC_DB_SCHEMA=public
            - KC_HOSTNAME_STRICT=false
            - KEYCLOAK_ADMIN=${K_ADMIN}
            - KEYCLOAK_ADMIN_PASSWORD=${K_ADMIN_PW}
        env_file: .env
        depends_on:
            keycloak-db:
                condition: service_healthy
        ports:
            - ${K_PORT}:8080
        networks:
            - backend_network

    keycloak-db:
        image: "postgres:16.2-alpine3.19"
        # image: postgres:latest
        container_name: keycloak-db
        restart: unless-stopped
        volumes:
            - keycloak-db-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${K_DB_NAME}
            - POSTGRES_USER=${K_DB_USER}
            - POSTGRES_PASSWORD=${K_DB_PW}
        env_file: .env
        healthcheck: 
            test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
            interval: 10s
            timeout: 10s
            retries: 3
        ports:
            - ${K_DB_PORT}:5432
        networks:
            - backend_network

networks:
  proxy:
    external: true
  backend_network:
    driver: bridge

volumes:
    user-data:
    keycloak-db-data:
