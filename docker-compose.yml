services:
    app:
        build:
            context: .
            dockerfile: Dockerfile.backend
            target: dev # target stage to build, CHANGE to prod for production
        container_name: backend
        restart: unless-stopped
        expose:
            - ${BACKEND_PORT}
        ports:
            - ${BACKEND_PORT}:${BACKEND_PORT}
        depends_on:
            - db
            - mongo-db
        volumes: # remove after testing
            - .:/app
        env_file: .env

    db:
        image: "postgres:16.2-alpine3.19"
        container_name: userdb
        restart: unless-stopped
        expose:
            - ${POSTGRES_PORT}
        ports:
            - ${POSTGRES_PORT}:${POSTGRES_PORT}
        volumes:
            - user-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        env_file: .env

    mongo-db:
        build:
            context: .
            dockerfile: Dockerfile.mongodb
        container_name: imagedb
        restart: unless-stopped
        expose:
            - ${MONGO_PORT}
        ports:
            - ${MONGO_PORT}:${MONGO_PORT}
        volumes:
            - image-data:/data/db
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
        env_file: .env

    # cache:
    #     image: redis:latest
    #     container_name: cache
    #     restart: unless-stopped
    #     expose:
    #         - ${REDIS_PORT}
    #     ports:
    #         - ${REDIS_PORT}:${REDIS_PORT}
    #     volumes:
    #         - cache-data:/data
    #     env_file: .env

    # auth:
    #   image: keycloak:latest
    #   container_name: auth
    #   restart: unless-stopped
    #   expose:
    #       - ${KEYCLOAK_PORT}
    #   ports:
    #       - "${KEYCLOAK_PORT}}:${KEYCLOAK_PORT}"

volumes:
    user-data:
    image-data:
