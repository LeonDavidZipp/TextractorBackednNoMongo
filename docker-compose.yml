services:
    # backend: # app
    #     build:
    #         context: .
    #         dockerfile: Dockerfile.backend
    #         target: dev # target stage to build, CHANGE to prod for production
    #     container_name: backend
    #     restart: unless-stopped
    #     # ports:
    #     #     - ${BACKEND_PORT}:${BACKEND_PORT}
    #     depends_on:
    #         - db
    #     volumes: # remove after testing
    #         - .:/app
    #     env_file: .env
    #     networks:
    #         - backend_network

    # db: # db
    #     image: "postgres:16.2-alpine3.19"
    #     container_name: db
    #     restart: unless-stopped
    #     ports:
    #         - ${DB_PORT}:${DB_PORT} #for testing
    #     volumes:
    #         - user-data:/var/lib/postgresql/data
    #     environment:
    #         - POSTGRES_USER=${POSTGRES_USER}
    #         - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #     env_file: .env
    #     networks:
    #         - backend_network

    # cache:
    #     image: redis:latest
    #     container_name: cache
    #     restart: unless-stopped
    #     expose:
    #         - ${REDIS_PORT}
    #     ports:
    #         - ${REDIS_PORT}:${REDIS_PORT}
    #     volumes:
    #         - cache-data:/data
    #     env_file: .env
    #     networks:
    #         - backend_network

    keycloak:
      image: quay.io/keycloak/keycloak:23.0.7
      container_name: keycloak
      environment:
        KC_DB: ${POSTGRES_DRIVER}
        KC_DB_URL: ${K_DB_URL}
        KC_DB_USERNAME: ${K_DB_USER}
        KC_DB_PASSWORD: ${K_DB_PW}

        KC_HOSTNAME: ${K_HNAME}
        KC_HOSTNAME_PORT: 5433
        KC_HOSTNAME_STRICT: false
        KC_HOSTNAME_STRICT_HTTPS: false

        KC_LOG_LEVEL: info
        KC_METRICS_ENABLED: true
        KC_HEALTH_ENABLED: true
        KEYCLOAK_ADMIN: ${K_ADMIN}
        KEYCLOAK_ADMIN_PASSWORD: ${K_ADMIN_PW}
      env_file: .env
      command: start-dev
      depends_on:
        - keycloakdb
      ports:
        - 8080:8080

    keycloakdb:
      image: postgres:16.2-alpine3.19
      container_name: keycloakdb
      volumes:
        - keycloakdb-data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: ${K_DB_USER}
        POSTGRES_PASSWORD: ${K_DB_PW}

networks:
  proxy:
    external: true
  backend_network:
    driver: bridge

volumes:
    user-data:
    keycloakdb-data:
